# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

orbs:
  node: circleci/node@5.1.0
  snyk: snyk/snyk@1.5.0
  aws-cli: circleci/aws-cli@3.1.2
  aws-s3: circleci/aws-s3@3.1.1

# Define a job to be invoked later in a workflow.
jobs:
  run_test:
    docker:
      - image: cimg/node:18.15.0
    steps:
      - checkout
      - run: sudo npm install
      - run: mkdir ~/junit
      - run:
          command: mocha test --reporter mocha-junit-reporter || true
          environment:
            MOCHA_FILE: ~/junit/test-results.xml
          when: always
      - store_test_results:
          path: ~/junit


  vulnerability_scan:
    docker:
      - image: cimg/node:18.15.0
    steps:
      - checkout
      - run:
          name: Instance npm Dependencies
          command: |
            sudo npm install -g
      - run:
          name: Snyk Env Var
          # environment:
          #   SNYK_TOKEN: "657c202b-5096-4a63-8fc7-55a53ab5d728"
          command: echo $SNYK_TOKEN
      # - snyk/scan

  build_app:
    docker:
      - image: cimg/node:18.15.0
    steps:
      - checkout
      - run:
          name: Install npm Dependencies
          command: |
            sudo npm install -g
      - run:
          name: Run npm Build
          command: |
            npm build
            ls -la ./dist
      - persist_to_workspace:
          root: .
          paths:
            - .
      - run:
          name: Check Version
          command: |
            echo $BASE_VERSION
            echo $BASE_VERSION.<< pipeline.number >>

  copy_to_s3:
    docker:
      - image: cimg/python:3.8.15
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Check Dist Dir
          command: ls -la ./dist

      - aws-cli/setup
      - run:
          name: Copy Objects to s3
          command: |
            mkdir $$BASE_VERSION.<< pipeline.number >>
            ls -la
      # - aws-s3/copy:
      #     from: ./dist
      #     to: s3://sumz-bucket/$$BASE_VERSION.<< pipeline.number >>
      #     arguments:
      #       --recursive
      #     when: on_success




workflows:
  env-var-workflow:
    jobs:
      - run_test:
          name: run_test
          context: dev
      - vulnerability_scan:
          name: vulnerability_scan
          requires:
            - run_test
      - build_app:
          name: build_app
          context: dev
          requires:
            - vulnerability_scan
      # - copy_to_s3:
      #     name: copy_to_s3
      #     context: dev
      #     requires:
      #       - vulnerability_scan
      #       - build_app
